// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetaevDanilKt_31_21.Database;

#nullable disable

namespace PetaevDanilKt_31_21.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20241018162812_CreateDB")]
    partial class CreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetaevDanilKt_31_21.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор предмета");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DisciplineName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_discipline_name")
                        .HasComment("Название предмета");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bool")
                        .HasColumnName("c_is_deleted")
                        .HasComment("Удален ли предмет");

                    b.Property<bool>("IsHumanities")
                        .HasColumnType("bool")
                        .HasColumnName("c_discipline_is_humanities")
                        .HasComment("Гуманитарное направление");

                    b.Property<bool>("IsTechnical")
                        .HasColumnType("bool")
                        .HasColumnName("c_discipline_is_technical")
                        .HasComment("Техническое направление");

                    b.HasKey("Id")
                        .HasName("pk_cd_discipline_discipline_id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("PetaevDanilKt_31_21.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("grade_id")
                        .HasComment("Идентификатор оценки");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int4")
                        .HasColumnName("c_grade_discipline_id")
                        .HasComment("Идентификатор предмета");

                    b.Property<int>("Score")
                        .HasColumnType("int4")
                        .HasColumnName("c_grade_score")
                        .HasComment("Оценка");

                    b.Property<int>("StudentId")
                        .HasColumnType("int4")
                        .HasColumnName("c_grade_student_id")
                        .HasComment("Идентификатор студента");

                    b.HasKey("Id")
                        .HasName("pk_cd_grade_grade_id");

                    b.HasIndex(new[] { "DisciplineId" }, "ind_cd_grade_fk_f_discipline_id");

                    b.HasIndex(new[] { "StudentId" }, "ind_cd_grade_fk_student_id");

                    b.ToTable("cd_grade", (string)null);
                });

            modelBuilder.Entity("PetaevDanilKt_31_21.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("group_id")
                        .HasComment("Идентификатор группы");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("c_group_name")
                        .HasComment("Название группы");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bool")
                        .HasColumnName("c_is_deleted")
                        .HasComment("Удалена ли группа");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("c_group_speciality")
                        .HasComment("Специальность группы");

                    b.Property<int?>("StartYear")
                        .IsRequired()
                        .HasColumnType("int4")
                        .HasColumnName("c_group_start_year")
                        .HasComment("Год начала обучения");

                    b.Property<int>("YearGraduation")
                        .HasColumnType("int4")
                        .HasColumnName("c_group_year_graduation")
                        .HasComment("Год выпуска");

                    b.HasKey("Id")
                        .HasName("pk_cd_group_group_id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("PetaevDanilKt_31_21.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("student_id")
                        .HasComment("Идентификатор записи студента");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("c_student_firstname")
                        .HasComment("Имя студента");

                    b.Property<int>("GroupId")
                        .HasColumnType("int4")
                        .HasColumnName("c_student_group_id")
                        .HasComment("Идентификатор группы");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bool")
                        .HasColumnName("c_is_deleted")
                        .HasComment("Удален ли пользователь");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("c_student_lastname")
                        .HasComment("Фамилия студента");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("c_student_middlename")
                        .HasComment("Отчество студента");

                    b.HasKey("Id")
                        .HasName("pk_cd_student_student_id");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("ind_cd_student_fk_f_group_id");

                    b.ToTable("cd_student", (string)null);
                });

            modelBuilder.Entity("PetaevDanilKt_31_21.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("test_id")
                        .HasComment("Идентификатор зачета");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPassed")
                        .HasColumnType("bool")
                        .HasColumnName("c_test_is_passed")
                        .HasComment("Зачет сдан/не сдан");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_cd_test_test_id");

                    b.HasIndex("DisciplineId")
                        .HasDatabaseName("ind_cd_test_fk_f_discipline_id");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("ind_cd_test_fk_f_student_id");

                    b.ToTable("cd_test", (string)null);
                });

            modelBuilder.Entity("PetaevDanilKt_31_21.Models.Grade", b =>
                {
                    b.HasOne("PetaevDanilKt_31_21.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_discipline_id");

                    b.HasOne("PetaevDanilKt_31_21.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_student_id");

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PetaevDanilKt_31_21.Models.Student", b =>
                {
                    b.HasOne("PetaevDanilKt_31_21.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_group_id");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("PetaevDanilKt_31_21.Models.Test", b =>
                {
                    b.HasOne("PetaevDanilKt_31_21.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_discipline_id");

                    b.HasOne("PetaevDanilKt_31_21.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_student_id");

                    b.Navigation("Discipline");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
